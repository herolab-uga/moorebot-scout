// Generated by gencpp from file roller_eye/nav_patrol.msg
// DO NOT EDIT!


#ifndef ROLLER_EYE_MESSAGE_NAV_PATROL_H
#define ROLLER_EYE_MESSAGE_NAV_PATROL_H

#include <ros/service_traits.h>


#include <roller_eye/nav_patrolRequest.h>
#include <roller_eye/nav_patrolResponse.h>


namespace roller_eye
{

struct nav_patrol
{

typedef nav_patrolRequest Request;
typedef nav_patrolResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct nav_patrol
} // namespace roller_eye


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::roller_eye::nav_patrol > {
  static const char* value()
  {
    return "d6a5af10fcc8d2d1a3207d2742669e6d";
  }

  static const char* value(const ::roller_eye::nav_patrol&) { return value(); }
};

template<>
struct DataType< ::roller_eye::nav_patrol > {
  static const char* value()
  {
    return "roller_eye/nav_patrol";
  }

  static const char* value(const ::roller_eye::nav_patrol&) { return value(); }
};


// service_traits::MD5Sum< ::roller_eye::nav_patrolRequest> should match
// service_traits::MD5Sum< ::roller_eye::nav_patrol >
template<>
struct MD5Sum< ::roller_eye::nav_patrolRequest>
{
  static const char* value()
  {
    return MD5Sum< ::roller_eye::nav_patrol >::value();
  }
  static const char* value(const ::roller_eye::nav_patrolRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::roller_eye::nav_patrolRequest> should match
// service_traits::DataType< ::roller_eye::nav_patrol >
template<>
struct DataType< ::roller_eye::nav_patrolRequest>
{
  static const char* value()
  {
    return DataType< ::roller_eye::nav_patrol >::value();
  }
  static const char* value(const ::roller_eye::nav_patrolRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::roller_eye::nav_patrolResponse> should match
// service_traits::MD5Sum< ::roller_eye::nav_patrol >
template<>
struct MD5Sum< ::roller_eye::nav_patrolResponse>
{
  static const char* value()
  {
    return MD5Sum< ::roller_eye::nav_patrol >::value();
  }
  static const char* value(const ::roller_eye::nav_patrolResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::roller_eye::nav_patrolResponse> should match
// service_traits::DataType< ::roller_eye::nav_patrol >
template<>
struct DataType< ::roller_eye::nav_patrolResponse>
{
  static const char* value()
  {
    return DataType< ::roller_eye::nav_patrol >::value();
  }
  static const char* value(const ::roller_eye::nav_patrolResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROLLER_EYE_MESSAGE_NAV_PATROL_H
