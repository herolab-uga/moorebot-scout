// Generated by gencpp from file roller_eye/record_clean.msg
// DO NOT EDIT!


#ifndef ROLLER_EYE_MESSAGE_RECORD_CLEAN_H
#define ROLLER_EYE_MESSAGE_RECORD_CLEAN_H

#include <ros/service_traits.h>


#include <roller_eye/record_cleanRequest.h>
#include <roller_eye/record_cleanResponse.h>


namespace roller_eye
{

struct record_clean
{

typedef record_cleanRequest Request;
typedef record_cleanResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct record_clean
} // namespace roller_eye


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::roller_eye::record_clean > {
  static const char* value()
  {
    return "bda37decd5e3814bcc042f341d2e60a1";
  }

  static const char* value(const ::roller_eye::record_clean&) { return value(); }
};

template<>
struct DataType< ::roller_eye::record_clean > {
  static const char* value()
  {
    return "roller_eye/record_clean";
  }

  static const char* value(const ::roller_eye::record_clean&) { return value(); }
};


// service_traits::MD5Sum< ::roller_eye::record_cleanRequest> should match
// service_traits::MD5Sum< ::roller_eye::record_clean >
template<>
struct MD5Sum< ::roller_eye::record_cleanRequest>
{
  static const char* value()
  {
    return MD5Sum< ::roller_eye::record_clean >::value();
  }
  static const char* value(const ::roller_eye::record_cleanRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::roller_eye::record_cleanRequest> should match
// service_traits::DataType< ::roller_eye::record_clean >
template<>
struct DataType< ::roller_eye::record_cleanRequest>
{
  static const char* value()
  {
    return DataType< ::roller_eye::record_clean >::value();
  }
  static const char* value(const ::roller_eye::record_cleanRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::roller_eye::record_cleanResponse> should match
// service_traits::MD5Sum< ::roller_eye::record_clean >
template<>
struct MD5Sum< ::roller_eye::record_cleanResponse>
{
  static const char* value()
  {
    return MD5Sum< ::roller_eye::record_clean >::value();
  }
  static const char* value(const ::roller_eye::record_cleanResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::roller_eye::record_cleanResponse> should match
// service_traits::DataType< ::roller_eye::record_clean >
template<>
struct DataType< ::roller_eye::record_cleanResponse>
{
  static const char* value()
  {
    return DataType< ::roller_eye::record_clean >::value();
  }
  static const char* value(const ::roller_eye::record_cleanResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROLLER_EYE_MESSAGE_RECORD_CLEAN_H
