// Generated by gencpp from file roller_eye/wifi_switch_mode.msg
// DO NOT EDIT!


#ifndef ROLLER_EYE_MESSAGE_WIFI_SWITCH_MODE_H
#define ROLLER_EYE_MESSAGE_WIFI_SWITCH_MODE_H

#include <ros/service_traits.h>


#include <roller_eye/wifi_switch_modeRequest.h>
#include <roller_eye/wifi_switch_modeResponse.h>


namespace roller_eye
{

struct wifi_switch_mode
{

typedef wifi_switch_modeRequest Request;
typedef wifi_switch_modeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct wifi_switch_mode
} // namespace roller_eye


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::roller_eye::wifi_switch_mode > {
  static const char* value()
  {
    return "106fdf359311f6beba452ddefdd87f1b";
  }

  static const char* value(const ::roller_eye::wifi_switch_mode&) { return value(); }
};

template<>
struct DataType< ::roller_eye::wifi_switch_mode > {
  static const char* value()
  {
    return "roller_eye/wifi_switch_mode";
  }

  static const char* value(const ::roller_eye::wifi_switch_mode&) { return value(); }
};


// service_traits::MD5Sum< ::roller_eye::wifi_switch_modeRequest> should match
// service_traits::MD5Sum< ::roller_eye::wifi_switch_mode >
template<>
struct MD5Sum< ::roller_eye::wifi_switch_modeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::roller_eye::wifi_switch_mode >::value();
  }
  static const char* value(const ::roller_eye::wifi_switch_modeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::roller_eye::wifi_switch_modeRequest> should match
// service_traits::DataType< ::roller_eye::wifi_switch_mode >
template<>
struct DataType< ::roller_eye::wifi_switch_modeRequest>
{
  static const char* value()
  {
    return DataType< ::roller_eye::wifi_switch_mode >::value();
  }
  static const char* value(const ::roller_eye::wifi_switch_modeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::roller_eye::wifi_switch_modeResponse> should match
// service_traits::MD5Sum< ::roller_eye::wifi_switch_mode >
template<>
struct MD5Sum< ::roller_eye::wifi_switch_modeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::roller_eye::wifi_switch_mode >::value();
  }
  static const char* value(const ::roller_eye::wifi_switch_modeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::roller_eye::wifi_switch_modeResponse> should match
// service_traits::DataType< ::roller_eye::wifi_switch_mode >
template<>
struct DataType< ::roller_eye::wifi_switch_modeResponse>
{
  static const char* value()
  {
    return DataType< ::roller_eye::wifi_switch_mode >::value();
  }
  static const char* value(const ::roller_eye::wifi_switch_modeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROLLER_EYE_MESSAGE_WIFI_SWITCH_MODE_H
