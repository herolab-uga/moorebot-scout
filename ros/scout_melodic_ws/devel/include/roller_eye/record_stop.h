// Generated by gencpp from file roller_eye/record_stop.msg
// DO NOT EDIT!


#ifndef ROLLER_EYE_MESSAGE_RECORD_STOP_H
#define ROLLER_EYE_MESSAGE_RECORD_STOP_H

#include <ros/service_traits.h>


#include <roller_eye/record_stopRequest.h>
#include <roller_eye/record_stopResponse.h>


namespace roller_eye
{

struct record_stop
{

typedef record_stopRequest Request;
typedef record_stopResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct record_stop
} // namespace roller_eye


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::roller_eye::record_stop > {
  static const char* value()
  {
    return "2534c826460bf93cfe607a7e6b3bfe9d";
  }

  static const char* value(const ::roller_eye::record_stop&) { return value(); }
};

template<>
struct DataType< ::roller_eye::record_stop > {
  static const char* value()
  {
    return "roller_eye/record_stop";
  }

  static const char* value(const ::roller_eye::record_stop&) { return value(); }
};


// service_traits::MD5Sum< ::roller_eye::record_stopRequest> should match
// service_traits::MD5Sum< ::roller_eye::record_stop >
template<>
struct MD5Sum< ::roller_eye::record_stopRequest>
{
  static const char* value()
  {
    return MD5Sum< ::roller_eye::record_stop >::value();
  }
  static const char* value(const ::roller_eye::record_stopRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::roller_eye::record_stopRequest> should match
// service_traits::DataType< ::roller_eye::record_stop >
template<>
struct DataType< ::roller_eye::record_stopRequest>
{
  static const char* value()
  {
    return DataType< ::roller_eye::record_stop >::value();
  }
  static const char* value(const ::roller_eye::record_stopRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::roller_eye::record_stopResponse> should match
// service_traits::MD5Sum< ::roller_eye::record_stop >
template<>
struct MD5Sum< ::roller_eye::record_stopResponse>
{
  static const char* value()
  {
    return MD5Sum< ::roller_eye::record_stop >::value();
  }
  static const char* value(const ::roller_eye::record_stopResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::roller_eye::record_stopResponse> should match
// service_traits::DataType< ::roller_eye::record_stop >
template<>
struct DataType< ::roller_eye::record_stopResponse>
{
  static const char* value()
  {
    return DataType< ::roller_eye::record_stop >::value();
  }
  static const char* value(const ::roller_eye::record_stopResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROLLER_EYE_MESSAGE_RECORD_STOP_H
