// Generated by gencpp from file roller_eye/nav_mag_calibra.msg
// DO NOT EDIT!


#ifndef ROLLER_EYE_MESSAGE_NAV_MAG_CALIBRA_H
#define ROLLER_EYE_MESSAGE_NAV_MAG_CALIBRA_H

#include <ros/service_traits.h>


#include <roller_eye/nav_mag_calibraRequest.h>
#include <roller_eye/nav_mag_calibraResponse.h>


namespace roller_eye
{

struct nav_mag_calibra
{

typedef nav_mag_calibraRequest Request;
typedef nav_mag_calibraResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct nav_mag_calibra
} // namespace roller_eye


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::roller_eye::nav_mag_calibra > {
  static const char* value()
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const ::roller_eye::nav_mag_calibra&) { return value(); }
};

template<>
struct DataType< ::roller_eye::nav_mag_calibra > {
  static const char* value()
  {
    return "roller_eye/nav_mag_calibra";
  }

  static const char* value(const ::roller_eye::nav_mag_calibra&) { return value(); }
};


// service_traits::MD5Sum< ::roller_eye::nav_mag_calibraRequest> should match
// service_traits::MD5Sum< ::roller_eye::nav_mag_calibra >
template<>
struct MD5Sum< ::roller_eye::nav_mag_calibraRequest>
{
  static const char* value()
  {
    return MD5Sum< ::roller_eye::nav_mag_calibra >::value();
  }
  static const char* value(const ::roller_eye::nav_mag_calibraRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::roller_eye::nav_mag_calibraRequest> should match
// service_traits::DataType< ::roller_eye::nav_mag_calibra >
template<>
struct DataType< ::roller_eye::nav_mag_calibraRequest>
{
  static const char* value()
  {
    return DataType< ::roller_eye::nav_mag_calibra >::value();
  }
  static const char* value(const ::roller_eye::nav_mag_calibraRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::roller_eye::nav_mag_calibraResponse> should match
// service_traits::MD5Sum< ::roller_eye::nav_mag_calibra >
template<>
struct MD5Sum< ::roller_eye::nav_mag_calibraResponse>
{
  static const char* value()
  {
    return MD5Sum< ::roller_eye::nav_mag_calibra >::value();
  }
  static const char* value(const ::roller_eye::nav_mag_calibraResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::roller_eye::nav_mag_calibraResponse> should match
// service_traits::DataType< ::roller_eye::nav_mag_calibra >
template<>
struct DataType< ::roller_eye::nav_mag_calibraResponse>
{
  static const char* value()
  {
    return DataType< ::roller_eye::nav_mag_calibra >::value();
  }
  static const char* value(const ::roller_eye::nav_mag_calibraResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROLLER_EYE_MESSAGE_NAV_MAG_CALIBRA_H
